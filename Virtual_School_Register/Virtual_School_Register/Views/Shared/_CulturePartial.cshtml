@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@inject Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> LocOptions

@{
    var culture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();
    var cultureList = LocOptions.Value.SupportedUICultures.Select(x => new SelectListItem { Value = x.Name, Text = Localizer.GetString(x.Name) });
    var returnUrl = string.IsNullOrWhiteSpace(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
}

<div>
    <form asp-action="CultureManagement" asp-controller="Home" method="post" asp-route-returnUrl="@returnUrl">
        <select name="culture" asp-for="@culture.RequestCulture.UICulture.Name" onchange="this.form.submit();">
            <option value="en">@Localizer["en"]</option>
            <option value="pl">@Localizer["pl"]</option>
            <option value="ru">@Localizer["ru"]</option>
        </select>
    </form>
</div>

@*<div>
        <form asp-action="CultureManagement" asp-controller="Home" method="post" asp-route-returnUrl="@returnUrl">
            <select name="culture" asp-for="@culture.RequestCulture.UICulture.Name" asp-items="cultureList" onchange="this.form.submit();">
            </select>
        </form>
    </div>*@