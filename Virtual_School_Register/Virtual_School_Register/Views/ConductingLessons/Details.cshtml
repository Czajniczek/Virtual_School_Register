@*@model Virtual_School_Register.Models.ConductingLesson

    @{
        ViewData["Title"] = "Details";
    }

    <h1>Details</h1>

    <div>
        <h4>ConductingLesson</h4>
        <hr />
        <dl class="row">
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.User)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.User.Id)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Class)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Class.Content)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Subject)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Subject.Content)
            </dd>
        </dl>
    </div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.ConductingLessonId">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>
*@


@model IEnumerable<Virtual_School_Register.ViewModels.UsersGradesViewModel>

@{
    ViewData["Title"] = "Students";
    var conductingLesson = ViewBag.ConductingLesson as ConductingLesson;
}

<h1>
    Students:
    <b>
        @conductingLesson.Class.Name
        @conductingLesson.Subject.Name
    </b>
</h1>

<hr />

<table class="table table-striped text-center">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.Surname)
            </th>
            <th>
                Grades
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => user.User.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => user.User.Surname)
                </td>
                <td>
                    @foreach (var grade in user.Evaluations)
                    {
                        @Html.ActionLink(@grade.Value, "Details", "Evaluations", new { id = @grade.EvaluationId }, new { @class = "btn btn-outline-primary" })
                        @*<a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@grade.EvaluationId">@Html.Raw(grade.Value)</a>*@
                        <text>&nbsp;&nbsp;</text>
                    }
                </td>
                <td>
                    @Html.ActionLink("Add grade", "Create", "Evaluations", new { userId = user.User.Id, subjectId = conductingLesson.SubjectId }, new { @class = "btn btn-outline-success" })

                    @*<a class="btn btn-outline-info" asp-action="Details" asp-route-id="@user.Id">Details</a>
                        <a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@user.Id">Edit</a>
                        <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@user.Id">Delete</a>*@
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.ActionLink("Back to List", "Index", "ConductingLessons", null, new { @class = "btn btn-primary" })